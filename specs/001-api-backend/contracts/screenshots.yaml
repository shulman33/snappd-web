openapi: 3.1.0
info:
  title: snappd Screenshot API
  version: 1.0.0
  description: Screenshot upload, management, and public sharing

servers:
  - url: https://snappd.app/api
    description: Production
  - url: http://localhost:3000/api
    description: Local development

tags:
  - name: Screenshots
    description: Screenshot upload and management
  - name: Public
    description: Public screenshot viewing
  - name: Upload
    description: File upload operations

paths:
  /screenshots:
    post:
      summary: Upload new screenshot
      description: Upload a screenshot with metadata. Validates MIME type, checks plan limits, generates short ID.
      operationId: uploadScreenshot
      tags: [Screenshots]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [filename, mime_type, file_size, width, height, storage_path]
              properties:
                filename:
                  type: string
                  maxLength: 255
                  example: design-mockup.png
                mime_type:
                  type: string
                  enum: [image/png, image/jpeg, image/gif, image/webp]
                  example: image/png
                file_size:
                  type: integer
                  minimum: 1
                  maximum: 10485760
                  description: File size in bytes (max 10MB)
                  example: 524288
                width:
                  type: integer
                  minimum: 1
                  example: 1920
                height:
                  type: integer
                  minimum: 1
                  example: 1080
                storage_path:
                  type: string
                  description: Path in Supabase Storage
                  example: 550e8400-e29b-41d4-a716-446655440000/1729180800_abc123.png
      responses:
        '201':
          description: Screenshot uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screenshot'
        '400':
          description: Invalid input (MIME type, file size, dimensions)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: File too large (>10MB)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded or monthly limit reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                rate_limit:
                  value:
                    error: Rate limit exceeded. Try again in 60 seconds.
                    code: RATE_LIMIT_EXCEEDED
                monthly_limit:
                  value:
                    error: Monthly limit reached (10/10 screenshots used). Upgrade to pro for unlimited uploads.
                    code: MONTHLY_LIMIT_REACHED
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: List user's screenshots
      description: Get paginated list of user's screenshots, sorted by newest first
      operationId: listScreenshots
      tags: [Screenshots]
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 50
          description: Results per page
        - name: search
          in: query
          schema:
            type: string
          description: Search by filename (case-insensitive substring match)
        - name: from_date
          in: query
          schema:
            type: string
            format: date
          description: Filter screenshots from this date
        - name: to_date
          in: query
          schema:
            type: string
            format: date
          description: Filter screenshots to this date
      responses:
        '200':
          description: Screenshots retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Screenshot'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /screenshots/{id}:
    get:
      summary: Get screenshot metadata
      description: Retrieve metadata for a specific screenshot
      operationId: getScreenshot
      tags: [Screenshots]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Screenshot ID
      responses:
        '200':
          description: Screenshot metadata retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screenshot'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized to access this screenshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Update screenshot metadata
      description: Update screenshot filename or public visibility
      operationId: updateScreenshot
      tags: [Screenshots]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Screenshot ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                original_filename:
                  type: string
                  maxLength: 255
                  example: updated-filename.png
                is_public:
                  type: boolean
                  example: false
      responses:
        '200':
          description: Screenshot updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screenshot'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized to update this screenshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete screenshot
      description: Permanently delete screenshot and associated file from storage
      operationId: deleteScreenshot
      tags: [Screenshots]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Screenshot ID
      responses:
        '200':
          description: Screenshot deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Screenshot deleted successfully
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized to delete this screenshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /screenshots/{id}/download:
    get:
      summary: Download screenshot file
      description: Get authenticated download URL for screenshot file
      operationId: downloadScreenshot
      tags: [Screenshots]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Screenshot ID
      responses:
        '200':
          description: Download URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                    description: Signed download URL (expires in 5 minutes)
                    example: https://storage.supabase.com/...?token=...
                  expires_in:
                    type: integer
                    description: URL expiration in seconds
                    example: 300
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized to download this screenshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Screenshot expired (free tier 30-day limit)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /s/{shortId}:
    get:
      summary: Public screenshot viewer
      description: View shared screenshot via short URL. Increments view count.
      operationId: viewPublicScreenshot
      tags: [Public]
      parameters:
        - name: shortId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9_-]{6}$'
          description: Short ID (6-character nanoid)
          example: abc123
      responses:
        '200':
          description: Screenshot metadata and public URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicScreenshot'
        '404':
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '410':
          description: Screenshot expired (free tier 30-day limit)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: This screenshot has expired. Free tier screenshots are deleted after 30 days.
                code: SCREENSHOT_EXPIRED
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /upload/signed-url:
    post:
      summary: Get signed upload URL
      description: Generate signed URL for direct upload to Supabase Storage (browser extension)
      operationId: getSignedUploadUrl
      tags: [Upload]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [filename, mime_type, file_size]
              properties:
                filename:
                  type: string
                  maxLength: 255
                  example: screenshot.png
                mime_type:
                  type: string
                  enum: [image/png, image/jpeg, image/gif, image/webp]
                  example: image/png
                file_size:
                  type: integer
                  minimum: 1
                  maximum: 10485760
                  example: 524288
      responses:
        '200':
          description: Signed URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  upload_url:
                    type: string
                    format: uri
                    description: Signed upload URL (expires in 5 minutes)
                    example: https://storage.supabase.com/...?token=...
                  storage_path:
                    type: string
                    description: Path to use when creating screenshot record
                    example: 550e8400-e29b-41d4-a716-446655440000/1729180800_abc123.png
                  expires_in:
                    type: integer
                    description: URL expiration in seconds
                    example: 300
        '400':
          description: Invalid input (MIME type, file size)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: File too large (>10MB)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded or monthly limit reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Screenshot:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        short_id:
          type: string
          pattern: '^[A-Za-z0-9_-]{6}$'
          example: abc123
        original_filename:
          type: string
          example: design-mockup.png
        file_size:
          type: integer
          description: File size in bytes
          example: 524288
        width:
          type: integer
          example: 1920
        height:
          type: integer
          example: 1080
        mime_type:
          type: string
          enum: [image/png, image/jpeg, image/gif, image/webp]
          example: image/png
        public_url:
          type: string
          format: uri
          description: Public URL for sharing
          example: https://snappd.app/s/abc123
        storage_url:
          type: string
          format: uri
          description: Supabase Storage URL
          example: https://storage.supabase.com/...
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: Expiration date (null for pro users)
          example: '2025-11-16T12:00:00Z'
        views:
          type: integer
          description: Number of public views
          example: 42
        is_public:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2025-10-17T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-10-17T12:00:00Z'

    PublicScreenshot:
      type: object
      properties:
        short_id:
          type: string
          example: abc123
        original_filename:
          type: string
          example: design-mockup.png
        width:
          type: integer
          example: 1920
        height:
          type: integer
          example: 1080
        storage_url:
          type: string
          format: uri
          example: https://storage.supabase.com/...
        views:
          type: integer
          example: 42
        created_at:
          type: string
          format: date-time
          example: '2025-10-17T12:00:00Z'
        seo_metadata:
          type: object
          description: Open Graph metadata for social sharing
          properties:
            title:
              type: string
              example: Screenshot - design-mockup.png
            description:
              type: string
              example: Shared via snappd
            image:
              type: string
              format: uri
              example: https://storage.supabase.com/...

    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 50
        total:
          type: integer
          example: 150
        total_pages:
          type: integer
          example: 3

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: Invalid MIME type
        code:
          type: string
          description: Error code for client handling
          example: INVALID_MIME_TYPE

